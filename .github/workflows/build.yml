name: C/C++ CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            python: python3
            cxx: g++-9
            cc: gcc-9
          - os: macos-latest
            python: python3
          - os: windows-latest
            python: python

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init --recursive
      - run: |
          sudo add-apt-repository "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main"
          sudo add-apt-repository "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe"
          sudo apt update
          sudo apt install ninja-build g++-9
          curl -sSL https://github.com/Kitware/CMake/releases/download/v3.15.4/cmake-3.15.4-Linux-x86_64.tar.gz -o cmake.tar.gz
          sudo tar xf cmake.tar.gz --strip 1 -C /usr/local
        if: matrix.config.os == 'ubuntu-latest'
      - run: choco install ninja
        if: matrix.config.os == 'windows-latest'
      - run: brew install ninja
        if: matrix.config.os == 'macos-latest'
      - name: Install dependencies
        run: ${{ matrix.config.python }} install-deps.py
      - name: Setup CC and CXX
        if: runner.os == 'Linux'
        run: |
          echo "::set-env name=CC::${{ matrix.config.cc }}"
          echo "::set-env name=CXX::${{ matrix.config.cxx }}"
      - name: Setup x64
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $installationPath = $(& "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere" -latest -property installationPath)
          & "${env:COMSPEC}" /s /c "`"$installationPath\Common7\Tools\vsdevcmd.bat`" -no_logo -arch=x64 -host_arch=x64 && set" | foreach-object {
            $name, $value = $_ -split '=', 2
            echo "::set-env name=$name::$value"
          }
      - name: CMake Build
        if: runner.os != 'Windows'
        id: build
        run: |
          cmake cpu_experiments \
          -DCMAKE_TOOLCHAIN_FILE="$PWD/vcpkg/scripts/buildsystems/vcpkg.cmake" \
          -DCMAKE_BUILD_TYPE=Release \
          -G Ninja \
          -B build
          cmake --build build
      - name: CMake Build Windows
        id: build
        if: runner.os == 'Windows'
        run: |
          cmake cpu_experiments `
          -DCMAKE_TOOLCHAIN_FILE="$PWD/vcpkg/scripts/buildsystems/vcpkg.cmake" `
          -DCMAKE_BUILD_TYPE=Release `
          -G "Visual Studio 16 2019" `
          -DVCPKG_TARGET_TRIPLET=x64-windows-static `
          -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded `
          -B build
          cmake --build build --config Release
      - name: Upload artifact
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v1
        with:
          name: build-${{ runner.os }}
          path: build/cpu_experiments
      - name: Upload Windows artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v1
        with:
          name: build-${{ runner.os }}
          path: build/Release/cpu_experiments.exe